keycloakConfigCli:
  enabled: true
  configuration:
    realm.json: |
      {
        "enabled": true,
        "realm": "simple",
        "registrationAllowed": true,
        "clients": [
            {
              "clientId": "alice-swagger",
              "name": "Alice Swagger",
              "description": "Client for the Alice persona's swagger access ",
              "rootUrl": "http://localhost:3080/alice/swagger",
              "adminUrl": "",
              "baseUrl": "/",
              "surrogateAuthRequired": false,
              "enabled": true,
              "alwaysDisplayInConsole": false,
              "clientAuthenticatorType": "client-secret",
              "redirectUris": [
                "/*"
              ],
              "webOrigins": [
                "+"
              ],
              "notBefore": 0,
              "bearerOnly": false,
              "consentRequired": false,
              "standardFlowEnabled": true,
              "implicitFlowEnabled": false,
              "directAccessGrantsEnabled": false,
              "serviceAccountsEnabled": true,
              "publicClient": false,
              "frontchannelLogout": true,
              "protocol": "openid-connect",
              "attributes": {
                "oidc.ciba.grant.enabled": "false",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "/*",
                "oauth2.device.authorization.grant.enabled": "false",
                "backchannel.logout.revoke.offline.tokens": "false",
                "login_theme": "",
                "display.on.consent.screen": false,
                "frontchannel.logout.url": "",
                "backchannel.logout.url": ""
              },
              "authenticationFlowBindingOverrides": {},
              "fullScopeAllowed": true,
              "nodeReRegistrationTimeout": -1,
              "protocolMappers": [
                {
                  "name": "Client Host",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usersessionmodel-note-mapper",
                  "consentRequired": false,
                  "config": {
                    "user.session.note": "clientHost",
                    "introspection.token.claim": "true",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "clientHost",
                    "jsonType.label": "String"
                  }
                },
                {
                  "name": "Client ID",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usersessionmodel-note-mapper",
                  "consentRequired": false,
                  "config": {
                    "user.session.note": "client_id",
                    "introspection.token.claim": "true",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "client_id",
                    "jsonType.label": "String"
                  }
                },
                {
                  "name": "Client IP Address",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usersessionmodel-note-mapper",
                  "consentRequired": false,
                  "config": {
                    "user.session.note": "clientAddress",
                    "introspection.token.claim": "true",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "clientAddress",
                    "jsonType.label": "String"
                  }
                }
              ],
              "defaultClientScopes": [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "email"
              ],
              "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
              ],
              "access": {
                "view": true,
                "configure": true,
                "manage": true
              },
              "authorizationServicesEnabled": false
            },
            {
              "clientId": "bob-swagger",
              "name": "Bob Swagger",
              "description": "Client for the Bob persona's swagger access ",
              "rootUrl": "http://localhost:3080/bob/swagger",
              "adminUrl": "",
              "baseUrl": "/",
              "surrogateAuthRequired": false,
              "enabled": true,
              "alwaysDisplayInConsole": false,
              "clientAuthenticatorType": "client-secret",
              "redirectUris": [
                "/*"
              ],
              "webOrigins": [
                "+"
              ],
              "notBefore": 0,
              "bearerOnly": false,
              "consentRequired": false,
              "standardFlowEnabled": true,
              "implicitFlowEnabled": false,
              "directAccessGrantsEnabled": false,
              "serviceAccountsEnabled": true,
              "publicClient": false,
              "frontchannelLogout": true,
              "protocol": "openid-connect",
              "attributes": {
                "oidc.ciba.grant.enabled": "false",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "/*",
                "oauth2.device.authorization.grant.enabled": "false",
                "backchannel.logout.revoke.offline.tokens": "false",
                "login_theme": "",
                "display.on.consent.screen": false,
                "frontchannel.logout.url": "",
                "backchannel.logout.url": ""
              },
              "authenticationFlowBindingOverrides": {},
              "fullScopeAllowed": true,
              "nodeReRegistrationTimeout": -1,
              "protocolMappers": [
                {
                  "name": "Client Host",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usersessionmodel-note-mapper",
                  "consentRequired": false,
                  "config": {
                    "user.session.note": "clientHost",
                    "introspection.token.claim": "true",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "clientHost",
                    "jsonType.label": "String"
                  }
                },
                {
                  "name": "Client ID",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usersessionmodel-note-mapper",
                  "consentRequired": false,
                  "config": {
                    "user.session.note": "client_id",
                    "introspection.token.claim": "true",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "client_id",
                    "jsonType.label": "String"
                  }
                },
                {
                  "name": "Client IP Address",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usersessionmodel-note-mapper",
                  "consentRequired": false,
                  "config": {
                    "user.session.note": "clientAddress",
                    "introspection.token.claim": "true",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "clientAddress",
                    "jsonType.label": "String"
                  }
                }
              ],
              "defaultClientScopes": [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "email"
              ],
              "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
              ],
              "access": {
                "view": true,
                "configure": true,
                "manage": true
              },
              "authorizationServicesEnabled": false
            },
            {
              "clientId": "charlie-swagger",
              "name": "Charlie Swagger",
              "description": "Client for the Charlie persona's swagger access ",
              "rootUrl": "http://localhost:3080/charlie/swagger",
              "adminUrl": "",
              "baseUrl": "/",
              "surrogateAuthRequired": false,
              "enabled": true,
              "alwaysDisplayInConsole": false,
              "clientAuthenticatorType": "client-secret",
              "redirectUris": [
                "/*"
              ],
              "webOrigins": [
                "+"
              ],
              "notBefore": 0,
              "bearerOnly": false,
              "consentRequired": false,
              "standardFlowEnabled": true,
              "implicitFlowEnabled": false,
              "directAccessGrantsEnabled": false,
              "serviceAccountsEnabled": true,
              "publicClient": false,
              "frontchannelLogout": true,
              "protocol": "openid-connect",
              "attributes": {
                "oidc.ciba.grant.enabled": "false",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "/*",
                "oauth2.device.authorization.grant.enabled": "false",
                "backchannel.logout.revoke.offline.tokens": "false",
                "login_theme": "",
                "display.on.consent.screen": false,
                "frontchannel.logout.url": "",
                "backchannel.logout.url": ""
              },
              "authenticationFlowBindingOverrides": {},
              "fullScopeAllowed": true,
              "nodeReRegistrationTimeout": -1,
              "protocolMappers": [
                {
                  "name": "Client Host",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usersessionmodel-note-mapper",
                  "consentRequired": false,
                  "config": {
                    "user.session.note": "clientHost",
                    "introspection.token.claim": "true",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "clientHost",
                    "jsonType.label": "String"
                  }
                },
                {
                  "name": "Client ID",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usersessionmodel-note-mapper",
                  "consentRequired": false,
                  "config": {
                    "user.session.note": "client_id",
                    "introspection.token.claim": "true",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "client_id",
                    "jsonType.label": "String"
                  }
                },
                {
                  "name": "Client IP Address",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usersessionmodel-note-mapper",
                  "consentRequired": false,
                  "config": {
                    "user.session.note": "clientAddress",
                    "introspection.token.claim": "true",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "clientAddress",
                    "jsonType.label": "String"
                  }
                }
              ],
              "defaultClientScopes": [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "email"
              ],
              "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
              ],
              "access": {
                "view": true,
                "configure": true,
                "manage": true
              },
              "authorizationServicesEnabled": false
            }
          ]
      }
httpRelativePath: /auth/
proxy: edge
ingress:
  enabled: true
  hostname: localhost
  annotations:
    nginx.ingress.kubernetes.io/enable-global-auth: "false"
extraEnvVars:
  - name: KC_HOSTNAME_PATH
    value: /auth/
  - name: KC_HOSTNAME_PORT
    value: "3080"
  - name: KC_HOSTNAME_ADMIN_URL
    value: "http://localhost:3080/auth/"
  - name: KC_HOSTNAME_URL
    value: "http://localhost:3080/auth/"
  - name: KC_HOSTNAME_DEBUG
    value: "true"
